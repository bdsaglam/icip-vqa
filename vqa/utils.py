# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/01_utils.ipynb (unless otherwise specified).

__all__ = ['flatten_dict']

# Cell

from pathlib import Path
from fastcore.basics import patch

# Cell

@patch
def ls_sorted(self:Path):
    "ls but sorts files by name numerically"
    return self.ls().sorted(key=lambda f: int(f.with_suffix('').name))

# Cell

def flatten_dict(d: dict):
    """flattens a nested dict one level"""
    def func(dct):
        for k, v in dct.items():
            if isinstance(v, dict):
                yield from v.items()
            else:
                yield k, v
    return dict(func(d))